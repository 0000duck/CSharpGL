{
  "name": "CSharpGL",
  "tagline": "Objected-Oriented Modern OpenGL in C#",
  "body": "# Welcome to CSharpGL\r\n[CSharpGL](https://github.com/bitzhuwei/CSharpGL) is a pure C# project that allows for modern OpenGL rendering in a Objected-Oriented way. It meets common requirements in OpenGL rendering such as:\r\n## Modern Rendering\r\nObjected-Oriented modern rendering using GLSL shaders and vertex buffer objects.\r\n## Uniform Variables\r\nstructs support setting values for uniform variables in GLSL shader.\r\n## Camera and Rotator\r\nmove or rotate camera to get projection and view matrix.\r\n## Color-Coded Picking\r\nPickableRenderer supports picking primitives in multiple vertex buffer objects using Mouse.\r\n## GLCanvas\r\nA winform control that supports drag-drop and wraps initialization of creating OpenGL context.\r\n## GLControl\r\nRendering 'Control' at fixed position with fixed size. For example, GLAxis renders an axis at left bottom corner.\r\n'Control' binding to specified border just like winform-control.\r\n## Text\r\nRendering text using ``glRasterPos()`` and CallList.\r\nRendering text using GLText(a special GLControl).\r\n## Some Models\r\nA Cube, Sphere, Teapot and some other models.\r\n## GLSwitch\r\nWraps OpenGL commands like \r\n```\r\nglEnable(GL_BLEND);\r\nglBlendFunc(GL_SOURCE_ALPHA, GL_ONE_MINUS_DST_ALPHA);\r\n```\r\nor\r\n```\r\nglLineWidth(2.0f);\r\n```\r\n## Converting TTF file to picture\r\nThe project CSharpGL.Font2Picture in :open_file_folder:`Infrastructure` is a quick tool converting TTF files to pictures along with a xml config file.\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}