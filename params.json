{
  "name": "CSharpGL",
  "tagline": "Objected-Oriented Modern OpenGL in C#",
  "body": "# :art:Welcome to CSharpGL\r\n[CSharpGL](https://github.com/bitzhuwei/CSharpGL) is a pure C# project that allows for modern OpenGL rendering in a Objected-Oriented way. It meets common requirements in OpenGL rendering such as:\r\n## :rocket:Modern Rendering\r\nObjected-Oriented modern rendering using GLSL shaders and vertex buffer objects.\r\n\r\n![teapot](http://images.cnblogs.com/cnblogs_com/bitzhuwei/554293/o_bitzhuwei.cnblogs.com000000092.jpg)\r\n## :car:Uniform Variables\r\nstructs support setting values for uniform variables in GLSL shader.  \r\n![setup uniform value](http://images2015.cnblogs.com/blog/383191/201604/383191-20160422030922929-1238191723.png)\r\n## :movie_camera:Camera and Rotator\r\nmove or rotate camera to get projection and view matrix.  \r\n![rotate camera](http://images.cnblogs.com/cnblogs_com/bitzhuwei/482613/o_earth.gif)\r\n## :pushpin:Color-Coded Picking\r\nPickableRenderer supports picking primitives in multiple vertex buffer objects using Mouse.  \r\n![pick and move primitive](http://images2015.cnblogs.com/blog/383191/201605/383191-20160503191610388-117673971.gif)\r\n## :stars:GLCanvas\r\nA winform control that supports drag-drop and wraps initialization of creating OpenGL context.\r\n\r\n## :slot_machine:GLControl\r\nRendering 'Control' at fixed position with fixed size. For example, GLAxis renders an axis at left bottom corner.\r\n'Control' binding to specified border just like winform-control.  \r\n![GLControl](http://images.cnblogs.com/cnblogs_com/bitzhuwei/554293/o_GLText.gif)\r\n## :abcd:Text\r\nRendering text using ``glRasterPos()`` and CallList.\r\nRendering text using GLText(a special GLControl).\r\n## :tea:Some Models\r\nA Cube, Sphere, Teapot and some other models.  \r\n![teapot](http://images.cnblogs.com/cnblogs_com/bitzhuwei/554293/o_c.png)\r\n## :cancer:GLSwitch\r\nWraps OpenGL commands like \r\n```\r\nglEnable(GL_BLEND);\r\nglBlendFunc(GL_SRC_ALPHA, GL_ONE_MINUS_DST_ALPHA);\r\n...\r\nglDisable(GL_BLEND);\r\n```\r\nor\r\n```\r\nglLineWidth(2.0f);\r\n```\r\n![GLSwitch](http://images2015.cnblogs.com/blog/383191/201604/383191-20160422030921304-1011157742.png)\r\n## :curly_loop:Load True Type Font File\r\nLoad True Type Font File(*.ttf or *.otf) to build a texture filled with glyphs, which then could be used to render text.\r\n## :ideograph_advantage:Converting TTF file to picture\r\nThe project CSharpGL.Font2Picture in :open_file_folder:`Infrastructure` is a quick tool converting TTF files to pictures along with a xml config file.  \r\n![export-glyph-texture-from-TTF](http://images2015.cnblogs.com/blog/383191/201606/383191-20160605143700258-489110969.png)\r\n# Raycast Volume Render\r\nSome cool demos.  \r\n![rotate camera](http://images.cnblogs.com/cnblogs_com/bitzhuwei/554293/o_vr.gif)\r\n# :question:Support or Contact\r\nCheck my blog [here](http://www.cnblogs.com/bitzhuwei/) if you are familiar with Chinese.",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}